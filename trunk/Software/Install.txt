SDR Installation
================

There are five programs. UWSDR/UWSDR.exe which is the SDR GUI itself, SDREmulator/SDREmulator.exe which is as the name suggests, an emulator for the SDR, GUISetup/GUISetup.exe which sets up the required parameters to start the SDR, SDRHelp/SDRHelp.exe which allows access to the documentation, and finally SDRSetup/SDRSetup.exe which sets the initial parameters of the SDR hardware.

To start you need to setup the GUI. Run GUISetup/GUISetup.exe and choose a name for your SDR, then an SDR filename. The Audio API to use should be selected, followed by the Audio  Device. On Windows the API choice is MME, DirectAudio and ASIO. These are in reverse order of preference with ASIO better than DirectAudio which is in turn better than MME. Choose the best that your sound card supports. For Linux the choices are potentially Jack, ALSA and OSS. With modern versions of Linux, OSS is a layer on top of ALSA, so choose ALSA. Jack is a general purpose method for feeding audio between programs as well as between programs and sound devices. The choice of xhich is available is made at compile time. The choices for Mac OS X are potentially Jack and CoreAudio.

There are a number of .sdr files included, if the 23cms or 13cms .sdr files are used then the SDR Emulator must be used, which is described below. The Demo.sdr file can be used standalone to demonstrate the GUI without the need for any hardware. The SoftRock series of receivers and transceivers have a set of.sdr files. These devices supply their data via the sound card. With the SoftRock receivers it is possible to use the same sound card for both the SoftRock receiver input and for the speaker/headphones.

Please note that the SDR Emulator and the GUI cannot operate on the same PC. The IP Address of the machine running the SDREmulator will need to be entered, this value can be found by running the command "ipconfig" in a Command Window on Windows. The control port should be an unused port number on your PC, I use 5001.

You may have the option to create a desktop icon for your new SDR instance. To run the GUI, all you need to do is click on the desktop icon that is created by GUISetup. On Linux it is possible that the creation of the desktop icon is not available. If that is the case then the GUI must be started from the command line.

Pressing Create will put these initial parameters into the registry/configuration file. You can change these values later, the name of existing configurations will appear on the drop down menu. Changing the values here will not change any other values associated with the named SDR if it already exists.

If nothing changes, you shouldn't need to run GUISetup again, unless you get another SDR.

As well as starting the GUI from an icon created by GUISetup, it is also possible to start it from the command line, the definition of this is:

UWSDR [SDR Name]

It is possible to have multiple names for one physical SDR, this can happen if the SDR is used (for example) for both tropo and EME work. If you have two such names (say 13cms-Tropo and 13cms-EME) then each will have it's own settings for the VFO's and other parameters. Obviously only one GUI for each physical SDR may be running at a time.

If no SDR Name is given then a popup box will appear to allow you to choose an existing SDR Name to use.

You may need to run the SDREmulator. Run the program with the IP address of your GUI, the port number for the control port, and the port nummber for the data port. In the example above, the control port would be 5001. It also has three optional arguments. A "-s" will cause the emulator to transmit receive data even though the GUI hasn't connected to it and eneabled the receive function. A "-d" parameter to enable a delay between sending data packets out, this delay is half that needed to space the packets evenly. A final parameter of a number indicating how big each packet should be in samples is available. Therefore the command line definition of the SDREmulator is:

SDREmulator [-d] [-s] <IP Address> <Control Port> [Packet Size]

The original default of a packet size of 2048 causes problems for the back end hardware, while a value of 256 is too small for the GUI. Using values of 512, 1024 and 2048 with or without a delay is fine with the GUI and the SDREmulator. When testing the values, look at the Emulator.log as it is important that the number of overruns is zero, this can be found on the SDRDataWriter line in the log file.

The SDREmulator will first ask you for the Audio API and Device of an audio device. This is used for timing purposes, so it needs no actual audio input.

Then the main emulator window where you can see interaction with the GUI will appear. At the top of the window is a menu under "Source" which control the source of the data used by the emulator. The startup default is "Internal" which is the simple noisy carrier which has been available up until now within the GUI. The other options are "Sound Card" which expects the input of an I/Q receiver using the sound card that you specified at the beginning, or "Sound File" which allows you to choose a WAV file containing I/Q audio samples.

Now run the SDR GUI itself, this is named UWSDR/UWSDR.exe and now takes a mandatory argument. This is the name that you entered into the Name entry in GUISetup above. You may have a desktop icon or menu entry for it.
